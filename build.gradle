plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroup 'org.ladysnake'
			includeGroupByRegex 'dev\\.onyxstudios.*'
		}
	}
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	maven {
		name = "meteor-maven-snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
	mavenCentral()
	jcenter()
	maven { url 'https://jitpack.io' }

}

shadowJar {
	configurations = [project.configurations.shadow]
}


configurations {
	modImplementation.extendsFrom(modInclude)
	include.extendsFrom(modInclude)

	// include libraries
	implementation.extendsFrom(library)
	shadow.extendsFrom(library)
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway. (No we dont)
//	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Renderer 1.21.4 library
	include modImplementation("io.github.0x3c50.renderer:renderer-fabric:${project.renderer_version}")


	// Baritone API from meteor's fork
	modCompileOnly "meteordevelopment:baritone:${project.baritone_version}"

	// LuaJ library
	modInclude("org.luaj:luaj-jse:3.0.1")

	// Discord GameSDK
	modInclude('com.github.JnCrMx:discord-game-sdk4j:v0.5.5')

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/heliosclient.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}"}
	}

	manifest {
		attributes(
				'Built-by': System.getProperty('user.name'),
		)
	}
}


// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
